
---
- name: Check the Vault sealed status.
  ansible.builtin.shell: "{{ vault_binary }} status | grep -i sealed | awk '{print $2}'"
  environment:
    VAULT_ADDR: "{{ vault_address }}"
    VAULT_CACERT: "{{ vault_ssl_ca_dest }}"
    VAULT_SKIP_VERIFY: "true"
  changed_when: false
  register: vault_is_sealed
  tags: unseal

- name: Unseal Prep
  when: vault_is_sealed.stdout == "true"
  tags: unseal
  block:
    - name: Unseal - Retrieve local token file content.
      ansible.builtin.shell: cat /home/gregbolton/bootstrap-tokens/vault.master.keys
      register: token_file_output
      delegate_to: "{{ groups['consul_servers'] | first }}"

    - name: Unseal - Retrieve first unseal key from initialization info.
      ansible.builtin.set_fact:
        vault_unseal_key_1: "{{ token_file_output.stdout_lines[0].split(' ')[-1] }}"
      delegate_to: "{{ groups['consul_servers'] | first }}"

    - name: Unseal - Retrieve second unseal key from initialization info.
      ansible.builtin.set_fact:
        vault_unseal_key_2: "{{ token_file_output.stdout_lines[1].split(' ')[-1] }}"
      delegate_to: "{{ groups['consul_servers'] | first }}"

    - name: Unseal - Retrieve third unseal key from initialization info.
      ansible.builtin.set_fact:
        vault_unseal_key_3: "{{ token_file_output.stdout_lines[2].split(' ')[-1] }}"
      delegate_to: "{{ groups['consul_servers'] | first }}"

- name: Unseal first node
  when:
    - ansible_hostname == groups['vault_servers'] | first
    - vault_is_sealed.stdout == "true"
  delegate_to: "{{ groups['vault_servers'] | first }}"
  run_once: true
  tags: unseal
  block:
    - name: Ensure the first Vault is unsealed.
      ansible.builtin.command: "{{ vault_binary }} operator unseal {{ item }}"
      environment:
        VAULT_ADDR: "{{ vault_address }}"
        VAULT_CACERT: "{{ vault_ssl_ca_dest }}"
        VAULT_SKIP_VERIFY: "true"
      with_items:
        - "{{ vault_unseal_key_1 }}"
        - "{{ vault_unseal_key_2 }}"
        - "{{ vault_unseal_key_3 }}"
      changed_when: false

- name: Pause for a couple of seconds
  ansible.builtin.pause:
    seconds: 30
  tags: unseal

- name: Unseal all other nodes
  when:
    - ansible_hostname != groups['vault_servers'] | first
    - vault_is_sealed.stdout == "true"
  tags: unseal
  block:
    - name: Ensure the other Vault are unsealed.
      ansible.builtin.command: "{{ vault_binary }} operator unseal {{ item }}"
      environment:
        VAULT_ADDR: "{{ vault_address }}"
        VAULT_CACERT: "{{ vault_ssl_ca_dest }}"
        VAULT_SKIP_VERIFY: "true"
      with_items:
        - "{{ vault_unseal_key_1 }}"
        - "{{ vault_unseal_key_2 }}"
        - "{{ vault_unseal_key_3 }}"
      changed_when: false

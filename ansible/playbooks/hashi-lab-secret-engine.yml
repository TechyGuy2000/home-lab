---
- name: Configure Secret Engine
  hosts: consul1
  become: true

  vars_files:
    - ../roles/hashicorp/consul/vars/main.yml
    - ../roles/hashicorp/vault/vars/main.yml
    - ../roles/hashicorp/nomad/vars/main.yml

  vars:
    consul_consul_address: "consul.service.consul:8501"
    vault_consul_address: "https://vault.service.consul:8200"
    nomad_consul_address: "https://nomad.service.consul:4646"

  tasks:
    - name: Retrieve Consul token.
      ansible.builtin.command: "awk '/SecretID/ {print $2}' {{ consul_bootstrap_token_local_path }}"
      changed_when: false
      become: false
      register: consul_token

    - name: Retrieve Nomad token.
      ansible.builtin.command: "awk '/Secret ID/ {print $4}' {{ nomad_bootstrap_token_local_path }}"
      changed_when: false
      become: false
      register: nomad_token

    - name: Read admin password from file on consul1
      ansible.builtin.slurp:
        src: "/home/gregbolton/bootstrap-tokens/vault_admin_password.txt"
      register: slurped_admin_password
      run_once: true

    - name: Decode and set the admin password as a fact
      ansible.builtin.set_fact:
        admin_password: "{{ slurped_admin_password['content'] | b64decode }}"
      run_once: true

    - name: Retrieve client token.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/auth/userpass/login/{{ vault_admin_username }}"
        method: POST
        body_format: json
        body: '{ "password": "{{ admin_password }}" }'
        status_code:
          - 200
          - 204
        validate_certs: false
      register: vault_admin_login_response

    - name: Set fact of client token.
      ansible.builtin.set_fact:
        vault_token: "{{ vault_admin_login_response.json.auth.client_token }}"

    - name: Ensure Consul and Nomad secrets engine.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/sys/mounts/{{ item }}"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "type": "{{ item }}" }'
        status_code:
          - 200
          - 204
        validate_certs: false
      loop:
        - consul
        - nomad

    - name: Ensure Consul access configuration.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/consul/config/access"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "address": "{{ consul_consul_address }}", "scheme": "https", "token": "{{ consul_token.stdout }}" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Ensure Consul operator role.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/consul/roles/operator"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "consul_policies": "operator", "ttl": "8h" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Ensure Nomad access configuration.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/nomad/config/access"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "address": "{{ nomad_consul_address }}", "token": "{{ nomad_token.stdout }}" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Ensure Nomad lease ttl.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/nomad/config/lease"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "ttl": "8h" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Ensure Nomad operator role.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/nomad/role/operator"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "policies": "operator" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Ensure Nomad management role.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/nomad/role/management"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "type": "management" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Ensure Vault operator policy.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/sys/policy/{{ vault_operator_policy_name }}"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "policy": "path \"nomad/creds/{{ nomad_operator_policy_name }}\" {\n capabilities = [\"read\"]\n} \npath \"consul/creds/{{ consul_operator_policy_name }}\" {\n capabilities = [\"read\"]\n}" }'
        status_code:
          - 200
          - 204
        validate_certs: false

    - name: Capture local environment variables
      ansible.builtin.set_fact:
        local_operator_user: "{{ lookup('env', 'OPERATOR_USER') }}"
        local_operator_pass: "{{ lookup('env', 'OPERATOR_PASS') }}"
      delegate_to: localhost
      run_once: true

    - name: Ensure operator user is created using local env variables
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/auth/userpass/users/{{ local_operator_user }}"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body: '{"password": "{{ local_operator_pass }}", "policies": "{{ vault_operator_policy_name }}" }'
        status_code: [200, 204]
        validate_certs: false
